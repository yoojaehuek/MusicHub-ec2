{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getOptionUtilityClass } from './optionClasses';\nimport { useSlotProps } from '../utils';\nimport { useOption, useOptionContextStabilizer } from '../useOption';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n    highlighted = ownerState.highlighted,\n    selected = ownerState.selected;\n  var slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));\n}\nvar InnerOption = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Option(props, forwardedRef) {\n  var _slots$root, _optionRef$current;\n  var children = props.children,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    label = props.label,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    value = props.value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  var optionRef = React.useRef(null);\n  var combinedRef = useForkRef(optionRef, forwardedRef);\n\n  // If `label` is not explicitly provided, the `children` are used for convenience.\n  // This is used to populate the select's trigger with the selected option's label.\n  var computedLabel = label != null ? label : typeof children === 'string' ? children : (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.innerText;\n  var _useOption = useOption({\n      disabled: disabled,\n      label: computedLabel,\n      rootRef: combinedRef,\n      value: value\n    }),\n    getRootProps = _useOption.getRootProps,\n    selected = _useOption.selected,\n    highlighted = _useOption.highlighted,\n    index = _useOption.index;\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    highlighted: highlighted,\n    index: index,\n    selected: selected\n  });\n  var classes = useUtilityClasses(ownerState);\n  var rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n\n/**\r\n * An unstyled option to be used within a Select.\r\n *\r\n * Demos:\r\n *\r\n * - [Select](https://mui.com/base-ui/react-select/)\r\n *\r\n * API:\r\n *\r\n * - [Option API](https://mui.com/base-ui/react-select/components-api/#option)\r\n */\nvar Option = /*#__PURE__*/React.forwardRef(function Option(props, ref) {\n  var value = props.value;\n\n  // This wrapper component is used as a performance optimization.\n  // `useOptionContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual Option re-renders\n  // only when it needs to.\n  var _useOptionContextStab = useOptionContextStabilizer(value),\n    contextValue = _useOptionContextStab.contextValue;\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerOption, _extends({}, props, {\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * If `true`, the option will be disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n  /**\r\n   * A text representation of the option's content.\r\n   * Used for keyboard text navigation matching.\r\n   */\n  label: PropTypes.string,\n  /**\r\n   * The props used for each slot inside the Option.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the Option.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\r\n   * The value of the option.\r\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport { Option };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","getOptionUtilityClass","useSlotProps","useOption","useOptionContextStabilizer","useClassNamesOverride","ListContext","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","InnerOption","memo","forwardRef","Option","props","forwardedRef","_slots$root","_optionRef$current","children","_props$disabled","label","_props$slotProps","slotProps","_props$slots","value","other","Root","optionRef","useRef","combinedRef","computedLabel","current","innerText","_useOption","rootRef","getRootProps","index","classes","rootProps","getSlotProps","elementType","externalSlotProps","externalForwardedProps","className","ref","_useOptionContextStab","contextValue","Provider","process","env","NODE_ENV","propTypes","node","string","bool","shape","oneOfType","func","object","any","isRequired"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/base/Option/Option.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\r\nimport { getOptionUtilityClass } from './optionClasses';\r\nimport { useSlotProps } from '../utils';\r\nimport { useOption, useOptionContextStabilizer } from '../useOption';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { ListContext } from '../useList';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction useUtilityClasses(ownerState) {\r\n  const {\r\n    disabled,\r\n    highlighted,\r\n    selected\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));\r\n}\r\nconst InnerOption = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Option(props, forwardedRef) {\r\n  var _slots$root, _optionRef$current;\r\n  const {\r\n      children,\r\n      disabled = false,\r\n      label,\r\n      slotProps = {},\r\n      slots = {},\r\n      value\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\r\n  const optionRef = React.useRef(null);\r\n  const combinedRef = useForkRef(optionRef, forwardedRef);\r\n\r\n  // If `label` is not explicitly provided, the `children` are used for convenience.\r\n  // This is used to populate the select's trigger with the selected option's label.\r\n  const computedLabel = label != null ? label : typeof children === 'string' ? children : (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.innerText;\r\n  const {\r\n    getRootProps,\r\n    selected,\r\n    highlighted,\r\n    index\r\n  } = useOption({\r\n    disabled,\r\n    label: computedLabel,\r\n    rootRef: combinedRef,\r\n    value\r\n  });\r\n  const ownerState = _extends({}, props, {\r\n    disabled,\r\n    highlighted,\r\n    index,\r\n    selected\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const rootProps = useSlotProps({\r\n    getSlotProps: getRootProps,\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    className: classes.root,\r\n    ownerState\r\n  });\r\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\r\n    children: children\r\n  }));\r\n}));\r\n\r\n/**\r\n * An unstyled option to be used within a Select.\r\n *\r\n * Demos:\r\n *\r\n * - [Select](https://mui.com/base-ui/react-select/)\r\n *\r\n * API:\r\n *\r\n * - [Option API](https://mui.com/base-ui/react-select/components-api/#option)\r\n */\r\nconst Option = /*#__PURE__*/React.forwardRef(function Option(props, ref) {\r\n  const {\r\n    value\r\n  } = props;\r\n\r\n  // This wrapper component is used as a performance optimization.\r\n  // `useOptionContextStabilizer` ensures that the context value\r\n  // is stable across renders, so that the actual Option re-renders\r\n  // only when it needs to.\r\n  const {\r\n    contextValue\r\n  } = useOptionContextStabilizer(value);\r\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\r\n    value: contextValue,\r\n    children: /*#__PURE__*/_jsx(InnerOption, _extends({}, props, {\r\n      ref: ref\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * If `true`, the option will be disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * A text representation of the option's content.\r\n   * Used for keyboard text navigation matching.\r\n   */\r\n  label: PropTypes.string,\r\n  /**\r\n   * The props used for each slot inside the Option.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Option.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The value of the option.\r\n   */\r\n  value: PropTypes.any.isRequired\r\n} : void 0;\r\nexport { Option };"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;AAClF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,SAASC,uBAAuB,IAAIC,cAAc,QAAQ,mBAAmB;AAC7E,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,SAAS,EAAEC,0BAA0B,QAAQ,cAAc;AACpE,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,iBAAiBA,CAACC,UAAU,EAAE;EACrC,IACEC,QAAQ,GAGND,UAAU,CAHZC,QAAQ;IACRC,WAAW,GAETF,UAAU,CAFZE,WAAW;IACXC,QAAQ,GACNH,UAAU,CADZG,QAAQ;EAEV,IAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAEJ,QAAQ,IAAI,UAAU,EAAEC,WAAW,IAAI,aAAa,EAAEC,QAAQ,IAAI,UAAU;EAC7F,CAAC;EACD,OAAOb,cAAc,CAACc,KAAK,EAAET,qBAAqB,CAACJ,qBAAqB,CAAC,CAAC;AAC5E;AACA,IAAMe,WAAW,GAAG,aAAarB,KAAK,CAACsB,IAAI,EAAE,aAAatB,KAAK,CAACuB,UAAU,CAAC,SAASC,MAAMA,CAACC,KAAK,EAAEC,YAAY,EAAE;EAC9G,IAAIC,WAAW,EAAEC,kBAAkB;EACnC,IACIC,QAAQ,GAMNJ,KAAK,CANPI,QAAQ;IAAAC,eAAA,GAMNL,KAAK,CALPT,QAAQ;IAARA,QAAQ,GAAAc,eAAA,cAAG,KAAK,GAAAA,eAAA;IAChBC,KAAK,GAIHN,KAAK,CAJPM,KAAK;IAAAC,gBAAA,GAIHP,KAAK,CAHPQ,SAAS;IAATA,SAAS,GAAAD,gBAAA,cAAG,CAAC,CAAC,GAAAA,gBAAA;IAAAE,YAAA,GAGZT,KAAK,CAFPN,KAAK;IAALA,KAAK,GAAAe,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;IACVC,KAAK,GACHV,KAAK,CADPU,KAAK;IAEPC,KAAK,GAAGtC,6BAA6B,CAAC2B,KAAK,EAAE1B,SAAS,CAAC;EACzD,IAAMsC,IAAI,GAAG,CAACV,WAAW,GAAGR,KAAK,CAACC,IAAI,KAAK,IAAI,GAAGO,WAAW,GAAG,IAAI;EACpE,IAAMW,SAAS,GAAGtC,KAAK,CAACuC,MAAM,CAAC,IAAI,CAAC;EACpC,IAAMC,WAAW,GAAGrC,UAAU,CAACmC,SAAS,EAAEZ,YAAY,CAAC;;EAEvD;EACA;EACA,IAAMe,aAAa,GAAGV,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAG,OAAOF,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAG,CAACD,kBAAkB,GAAGU,SAAS,CAACI,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGd,kBAAkB,CAACe,SAAS;EAChL,IAAAC,UAAA,GAKIpC,SAAS,CAAC;MACZQ,QAAQ,EAARA,QAAQ;MACRe,KAAK,EAAEU,aAAa;MACpBI,OAAO,EAAEL,WAAW;MACpBL,KAAK,EAALA;IACF,CAAC,CAAC;IATAW,YAAY,GAAAF,UAAA,CAAZE,YAAY;IACZ5B,QAAQ,GAAA0B,UAAA,CAAR1B,QAAQ;IACRD,WAAW,GAAA2B,UAAA,CAAX3B,WAAW;IACX8B,KAAK,GAAAH,UAAA,CAALG,KAAK;EAOP,IAAMhC,UAAU,GAAGlB,QAAQ,CAAC,CAAC,CAAC,EAAE4B,KAAK,EAAE;IACrCT,QAAQ,EAARA,QAAQ;IACRC,WAAW,EAAXA,WAAW;IACX8B,KAAK,EAALA,KAAK;IACL7B,QAAQ,EAARA;EACF,CAAC,CAAC;EACF,IAAM8B,OAAO,GAAGlC,iBAAiB,CAACC,UAAU,CAAC;EAC7C,IAAMkC,SAAS,GAAG1C,YAAY,CAAC;IAC7B2C,YAAY,EAAEJ,YAAY;IAC1BK,WAAW,EAAEd,IAAI;IACjBe,iBAAiB,EAAEnB,SAAS,CAACb,IAAI;IACjCiC,sBAAsB,EAAEjB,KAAK;IAC7BkB,SAAS,EAAEN,OAAO,CAAC5B,IAAI;IACvBL,UAAU,EAAVA;EACF,CAAC,CAAC;EACF,OAAO,aAAaF,IAAI,CAACwB,IAAI,EAAExC,QAAQ,CAAC,CAAC,CAAC,EAAEoD,SAAS,EAAE;IACrDpB,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAML,MAAM,GAAG,aAAaxB,KAAK,CAACuB,UAAU,CAAC,SAASC,MAAMA,CAACC,KAAK,EAAE8B,GAAG,EAAE;EACvE,IACEpB,KAAK,GACHV,KAAK,CADPU,KAAK;;EAGP;EACA;EACA;EACA;EACA,IAAAqB,qBAAA,GAEI/C,0BAA0B,CAAC0B,KAAK,CAAC;IADnCsB,YAAY,GAAAD,qBAAA,CAAZC,YAAY;EAEd,OAAO,aAAa5C,IAAI,CAACF,WAAW,CAAC+C,QAAQ,EAAE;IAC7CvB,KAAK,EAAEsB,YAAY;IACnB5B,QAAQ,EAAE,aAAahB,IAAI,CAACQ,WAAW,EAAExB,QAAQ,CAAC,CAAC,CAAC,EAAE4B,KAAK,EAAE;MAC3D8B,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACFI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGrC,MAAM,CAACsC,SAAS,CAAC,yBAAyB;EAChF;EACA;EACA;EACA;EACA;AACF;AACA;EACEjC,QAAQ,EAAE5B,SAAS,CAAC8D,IAAI;EACxB;AACF;AACA;EACET,SAAS,EAAErD,SAAS,CAAC+D,MAAM;EAC3B;AACF;AACA;AACA;EACEhD,QAAQ,EAAEf,SAAS,CAACgE,IAAI;EACxB;AACF;AACA;AACA;EACElC,KAAK,EAAE9B,SAAS,CAAC+D,MAAM;EACvB;AACF;AACA;AACA;EACE/B,SAAS,EAAEhC,SAAS,CAACiE,KAAK,CAAC;IACzB9C,IAAI,EAAEnB,SAAS,CAACkE,SAAS,CAAC,CAAClE,SAAS,CAACmE,IAAI,EAAEnE,SAAS,CAACoE,MAAM,CAAC;EAC9D,CAAC,CAAC;EACF;AACF;AACA;AACA;AACA;EACElD,KAAK,EAAElB,SAAS,CAACiE,KAAK,CAAC;IACrB9C,IAAI,EAAEnB,SAAS,CAACkD;EAClB,CAAC,CAAC;EACF;AACF;AACA;EACEhB,KAAK,EAAElC,SAAS,CAACqE,GAAG,CAACC;AACvB,CAAC,GAAG,KAAK,CAAC;AACV,SAAS/C,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}