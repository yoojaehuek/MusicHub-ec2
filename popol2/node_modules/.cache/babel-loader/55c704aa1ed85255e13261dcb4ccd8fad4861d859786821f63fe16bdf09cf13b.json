{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoHideDuration\", \"children\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClickAwayListener } from '../ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { useSnackbar } from '../useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses() {\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/)\r\n * - [Snackbar](https://mui.com/joy-ui/react-snackbar/)\r\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\r\n *\r\n * API:\r\n *\r\n * - [Snackbar API](https://mui.com/base-ui/react-snackbar/components-api/#snackbar)\r\n */\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, forwardedRef) {\n  var _props$autoHideDurati = props.autoHideDuration,\n    autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n    children = props.children,\n    _props$disableWindowB = props.disableWindowBlurListener,\n    disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n    _props$exited = props.exited,\n    exited = _props$exited === void 0 ? true : _props$exited,\n    onClose = props.onClose,\n    open = props.open,\n    resumeHideDuration = props.resumeHideDuration,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var classes = useUtilityClasses();\n  var _useSnackbar = useSnackbar(_extends({}, props, {\n      autoHideDuration: autoHideDuration,\n      disableWindowBlurListener: disableWindowBlurListener,\n      onClose: onClose,\n      open: open,\n      resumeHideDuration: resumeHideDuration\n    })),\n    getRootProps = _useSnackbar.getRootProps,\n    onClickAway = _useSnackbar.onClickAway;\n  var ownerState = props;\n  var Root = slots.root || 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway: onClickAway\n    },\n    ownerState: ownerState\n  });\n\n  // ClickAwayListener doesn't support ownerState\n  delete clickAwayListenerProps.ownerState;\n\n  // So that we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\n  autoHideDuration: PropTypes.number,\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\r\n   * The prop used to handle exited transition and unmount the component.\r\n   * @default true\r\n   */\n  exited: PropTypes.bool,\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\r\n   * The props used for each slot inside the Snackbar.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the Snackbar.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Snackbar };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","ClickAwayListener","unstable_composeClasses","composeClasses","getSnackbarUtilityClass","useSnackbar","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","slots","root","Snackbar","forwardRef","props","forwardedRef","_props$autoHideDurati","autoHideDuration","children","_props$disableWindowB","disableWindowBlurListener","_props$exited","exited","onClose","open","resumeHideDuration","_props$slotProps","slotProps","_props$slots","other","classes","_useSnackbar","getRootProps","onClickAway","ownerState","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","className","clickAwayListenerProps","clickAwayListener","process","env","NODE_ENV","propTypes","number","node","bool","func","shape","oneOfType","element","isRequired","disableReactTree","mouseEvent","oneOf","touchEvent","object"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/base/Snackbar/Snackbar.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"autoHideDuration\", \"children\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ClickAwayListener } from '../ClickAwayListener';\r\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\r\nimport { getSnackbarUtilityClass } from './snackbarClasses';\r\nimport { useSnackbar } from '../useSnackbar';\r\nimport { useSlotProps } from '../utils';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = () => {\r\n  const slots = {\r\n    root: ['root']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/)\r\n * - [Snackbar](https://mui.com/joy-ui/react-snackbar/)\r\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\r\n *\r\n * API:\r\n *\r\n * - [Snackbar API](https://mui.com/base-ui/react-snackbar/components-api/#snackbar)\r\n */\r\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, forwardedRef) {\r\n  const {\r\n      autoHideDuration = null,\r\n      children,\r\n      disableWindowBlurListener = false,\r\n      exited = true,\r\n      onClose,\r\n      open,\r\n      resumeHideDuration,\r\n      slotProps = {},\r\n      slots = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const classes = useUtilityClasses();\r\n  const {\r\n    getRootProps,\r\n    onClickAway\r\n  } = useSnackbar(_extends({}, props, {\r\n    autoHideDuration,\r\n    disableWindowBlurListener,\r\n    onClose,\r\n    open,\r\n    resumeHideDuration\r\n  }));\r\n  const ownerState = props;\r\n  const Root = slots.root || 'div';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    getSlotProps: getRootProps,\r\n    externalForwardedProps: other,\r\n    externalSlotProps: slotProps.root,\r\n    additionalProps: {\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const clickAwayListenerProps = useSlotProps({\r\n    elementType: ClickAwayListener,\r\n    externalSlotProps: slotProps.clickAwayListener,\r\n    additionalProps: {\r\n      onClickAway\r\n    },\r\n    ownerState\r\n  });\r\n\r\n  // ClickAwayListener doesn't support ownerState\r\n  delete clickAwayListenerProps.ownerState;\r\n\r\n  // So that we only render active snackbars.\r\n  if (!open && exited) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\r\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\r\n      children: children\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\r\n  autoHideDuration: PropTypes.number,\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\r\n  disableWindowBlurListener: PropTypes.bool,\r\n  /**\r\n   * The prop used to handle exited transition and unmount the component.\r\n   * @default true\r\n   */\r\n  exited: PropTypes.bool,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\r\n  resumeHideDuration: PropTypes.number,\r\n  /**\r\n   * The props used for each slot inside the Snackbar.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n      children: PropTypes.element.isRequired,\r\n      disableReactTree: PropTypes.bool,\r\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\r\n      onClickAway: PropTypes.func,\r\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\r\n    })]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Snackbar.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport { Snackbar };"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,kBAAkB,EAAE,UAAU,EAAE,2BAA2B,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,EAAE,oBAAoB,EAAE,WAAW,EAAE,OAAO,CAAC;AAC7M,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,uBAAuB,IAAIC,cAAc,QAAQ,mBAAmB;AAC7E,SAASC,uBAAuB,QAAQ,mBAAmB;AAC3D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC9B,IAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM;EACf,CAAC;EACD,OAAOT,cAAc,CAACQ,KAAK,EAAEJ,qBAAqB,CAACH,uBAAuB,CAAC,CAAC;AAC9E,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMS,QAAQ,GAAG,aAAad,KAAK,CAACe,UAAU,CAAC,SAASD,QAAQA,CAACE,KAAK,EAAEC,YAAY,EAAE;EACpF,IAAAC,qBAAA,GAUMF,KAAK,CATPG,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IACvBE,QAAQ,GAQNJ,KAAK,CARPI,QAAQ;IAAAC,qBAAA,GAQNL,KAAK,CAPPM,yBAAyB;IAAzBA,yBAAyB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,aAAA,GAO/BP,KAAK,CANPQ,MAAM;IAANA,MAAM,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IACbE,OAAO,GAKLT,KAAK,CALPS,OAAO;IACPC,IAAI,GAIFV,KAAK,CAJPU,IAAI;IACJC,kBAAkB,GAGhBX,KAAK,CAHPW,kBAAkB;IAAAC,gBAAA,GAGhBZ,KAAK,CAFPa,SAAS;IAATA,SAAS,GAAAD,gBAAA,cAAG,CAAC,CAAC,GAAAA,gBAAA;IAAAE,YAAA,GAEZd,KAAK,CADPJ,KAAK;IAALA,KAAK,GAAAkB,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;IAEZC,KAAK,GAAGjC,6BAA6B,CAACkB,KAAK,EAAEjB,SAAS,CAAC;EACzD,IAAMiC,OAAO,GAAGrB,iBAAiB,CAAC,CAAC;EACnC,IAAAsB,YAAA,GAGI3B,WAAW,CAACT,QAAQ,CAAC,CAAC,CAAC,EAAEmB,KAAK,EAAE;MAClCG,gBAAgB,EAAhBA,gBAAgB;MAChBG,yBAAyB,EAAzBA,yBAAyB;MACzBG,OAAO,EAAPA,OAAO;MACPC,IAAI,EAAJA,IAAI;MACJC,kBAAkB,EAAlBA;IACF,CAAC,CAAC,CAAC;IARDO,YAAY,GAAAD,YAAA,CAAZC,YAAY;IACZC,WAAW,GAAAF,YAAA,CAAXE,WAAW;EAQb,IAAMC,UAAU,GAAGpB,KAAK;EACxB,IAAMqB,IAAI,GAAGzB,KAAK,CAACC,IAAI,IAAI,KAAK;EAChC,IAAMyB,SAAS,GAAG/B,YAAY,CAAC;IAC7BgC,WAAW,EAAEF,IAAI;IACjBG,YAAY,EAAEN,YAAY;IAC1BO,sBAAsB,EAAEV,KAAK;IAC7BW,iBAAiB,EAAEb,SAAS,CAAChB,IAAI;IACjC8B,eAAe,EAAE;MACfC,GAAG,EAAE3B;IACP,CAAC;IACDmB,UAAU,EAAVA,UAAU;IACVS,SAAS,EAAEb,OAAO,CAACnB;EACrB,CAAC,CAAC;EACF,IAAMiC,sBAAsB,GAAGvC,YAAY,CAAC;IAC1CgC,WAAW,EAAErC,iBAAiB;IAC9BwC,iBAAiB,EAAEb,SAAS,CAACkB,iBAAiB;IAC9CJ,eAAe,EAAE;MACfR,WAAW,EAAXA;IACF,CAAC;IACDC,UAAU,EAAVA;EACF,CAAC,CAAC;;EAEF;EACA,OAAOU,sBAAsB,CAACV,UAAU;;EAExC;EACA,IAAI,CAACV,IAAI,IAAIF,MAAM,EAAE;IACnB,OAAO,IAAI;EACb;EACA,OAAO,aAAad,IAAI,CAACR,iBAAiB,EAAEL,QAAQ,CAAC,CAAC,CAAC,EAAEiD,sBAAsB,EAAE;IAC/E1B,QAAQ,EAAE,aAAaV,IAAI,CAAC2B,IAAI,EAAExC,QAAQ,CAAC,CAAC,CAAC,EAAEyC,SAAS,EAAE;MACxDlB,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF4B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGpC,QAAQ,CAACqC,SAAS,CAAC,yBAAyB;EAClF;EACA;EACA;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACEhC,gBAAgB,EAAElB,SAAS,CAACmD,MAAM;EAClC;AACF;AACA;EACEhC,QAAQ,EAAEnB,SAAS,CAACoD,IAAI;EACxB;AACF;AACA;AACA;EACE/B,yBAAyB,EAAErB,SAAS,CAACqD,IAAI;EACzC;AACF;AACA;AACA;EACE9B,MAAM,EAAEvB,SAAS,CAACqD,IAAI;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE7B,OAAO,EAAExB,SAAS,CAACsD,IAAI;EACvB;AACF;AACA;EACE7B,IAAI,EAAEzB,SAAS,CAACqD,IAAI;EACpB;AACF;AACA;AACA;AACA;AACA;EACE3B,kBAAkB,EAAE1B,SAAS,CAACmD,MAAM;EACpC;AACF;AACA;AACA;EACEvB,SAAS,EAAE5B,SAAS,CAACuD,KAAK,CAAC;IACzBT,iBAAiB,EAAE9C,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAACsD,IAAI,EAAEtD,SAAS,CAACuD,KAAK,CAAC;MACtEpC,QAAQ,EAAEnB,SAAS,CAACyD,OAAO,CAACC,UAAU;MACtCC,gBAAgB,EAAE3D,SAAS,CAACqD,IAAI;MAChCO,UAAU,EAAE5D,SAAS,CAAC6D,KAAK,CAAC,CAAC,SAAS,EAAE,aAAa,EAAE,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;MAC3G3B,WAAW,EAAElC,SAAS,CAACsD,IAAI;MAC3BQ,UAAU,EAAE9D,SAAS,CAAC6D,KAAK,CAAC,CAAC,YAAY,EAAE,cAAc,EAAE,KAAK,CAAC;IACnE,CAAC,CAAC,CAAC,CAAC;IACJjD,IAAI,EAAEZ,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAACsD,IAAI,EAAEtD,SAAS,CAAC+D,MAAM,CAAC;EAC9D,CAAC,CAAC;EACF;AACF;AACA;AACA;AACA;EACEpD,KAAK,EAAEX,SAAS,CAACuD,KAAK,CAAC;IACrB3C,IAAI,EAAEZ,SAAS,CAACsC;EAClB,CAAC;AACH,CAAC,GAAG,KAAK,CAAC;AACV,SAASzB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}