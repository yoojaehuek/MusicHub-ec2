{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\r\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\r\n *\r\n * This component can be useful in a variety of situations:\r\n *\r\n * *   Escape hatch for broken dependencies not supporting SSR.\r\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\r\n * *   Reduce the rendering time on the server.\r\n * *   Under too heavy server load, you can turn on service degradation.\r\n *\r\n * Demos:\r\n *\r\n * - [No SSR](https://mui.com/base-ui/react-no-ssr/)\r\n *\r\n * API:\r\n *\r\n * - [NoSsr API](https://mui.com/base-ui/react-no-ssr/components-api/#no-ssr)\r\n */\nfunction NoSsr(props) {\n  var children = props.children,\n    _props$defer = props.defer,\n    defer = _props$defer === void 0 ? false : _props$defer,\n    _props$fallback = props.fallback,\n    fallback = _props$fallback === void 0 ? null : _props$fallback;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountedState = _React$useState2[0],\n    setMountedState = _React$useState2[1];\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * You can wrap a node.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * If `true`, the component will not only prevent server-side rendering.\r\n   * It will also defer the rendering of the children into a different screen frame.\r\n   * @default false\r\n   */\n  defer: PropTypes.bool,\n  /**\r\n   * The fallback content to display.\r\n   * @default null\r\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport { NoSsr };","map":{"version":3,"names":["_slicedToArray","React","PropTypes","exactProp","unstable_useEnhancedEffect","useEnhancedEffect","jsx","_jsx","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","useState","_React$useState2","mountedState","setMountedState","useEffect","Fragment","process","env","NODE_ENV","propTypes","node","bool"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/base/NoSsr/NoSsr.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n/**\r\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\r\n *\r\n * This component can be useful in a variety of situations:\r\n *\r\n * *   Escape hatch for broken dependencies not supporting SSR.\r\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\r\n * *   Reduce the rendering time on the server.\r\n * *   Under too heavy server load, you can turn on service degradation.\r\n *\r\n * Demos:\r\n *\r\n * - [No SSR](https://mui.com/base-ui/react-no-ssr/)\r\n *\r\n * API:\r\n *\r\n * - [NoSsr API](https://mui.com/base-ui/react-no-ssr/components-api/#no-ssr)\r\n */\r\nfunction NoSsr(props) {\r\n  const {\r\n    children,\r\n    defer = false,\r\n    fallback = null\r\n  } = props;\r\n  const [mountedState, setMountedState] = React.useState(false);\r\n  useEnhancedEffect(() => {\r\n    if (!defer) {\r\n      setMountedState(true);\r\n    }\r\n  }, [defer]);\r\n  React.useEffect(() => {\r\n    if (defer) {\r\n      setMountedState(true);\r\n    }\r\n  }, [defer]);\r\n\r\n  // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\r\n  return /*#__PURE__*/_jsx(React.Fragment, {\r\n    children: mountedState ? children : fallback\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * You can wrap a node.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * If `true`, the component will not only prevent server-side rendering.\r\n   * It will also defer the rendering of the children into a different screen frame.\r\n   * @default false\r\n   */\r\n  defer: PropTypes.bool,\r\n  /**\r\n   * The fallback content to display.\r\n   * @default null\r\n   */\r\n  fallback: PropTypes.node\r\n} : void 0;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // eslint-disable-next-line\r\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\r\n}\r\nexport { NoSsr };"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,cAAA;AAEb,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,EAAEC,0BAA0B,IAAIC,iBAAiB,QAAQ,YAAY;AACvF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IACEC,QAAQ,GAGND,KAAK,CAHPC,QAAQ;IAAAC,YAAA,GAGNF,KAAK,CAFPG,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,eAAA,GAEXJ,KAAK,CADPK,QAAQ;IAARA,QAAQ,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;EAEjB,IAAAE,eAAA,GAAwCd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAjB,cAAA,CAAAe,eAAA;IAAtDG,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EACpCZ,iBAAiB,CAAC,YAAM;IACtB,IAAI,CAACO,KAAK,EAAE;MACVO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EACXX,KAAK,CAACmB,SAAS,CAAC,YAAM;IACpB,IAAIR,KAAK,EAAE;MACTO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACA,OAAO,aAAaL,IAAI,CAACN,KAAK,CAACoB,QAAQ,EAAE;IACvCX,QAAQ,EAAEQ,YAAY,GAAGR,QAAQ,GAAGI;EACtC,CAAC,CAAC;AACJ;AACAQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGhB,KAAK,CAACiB,SAAS,CAAC,yBAAyB;EAC/E;EACA;EACA;EACA;EACA;AACF;AACA;EACEf,QAAQ,EAAER,SAAS,CAACwB,IAAI;EACxB;AACF;AACA;AACA;AACA;EACEd,KAAK,EAAEV,SAAS,CAACyB,IAAI;EACrB;AACF;AACA;AACA;EACEb,QAAQ,EAAEZ,SAAS,CAACwB;AACtB,CAAC,GAAG,KAAK,CAAC;AACV,IAAIJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAhB,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGL,SAAS,CAACK,KAAK,CAACiB,SAAS,CAAC;AACtD;AACA,SAASjB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}