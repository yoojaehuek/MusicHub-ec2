{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is less than the given breakpoint.\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n      withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n      _options$noSSR = options.noSSR,\n      noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n      initialWidthOption = options.initialWidth;\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n      var _getThemeProps = getThemeProps({\n          theme: theme,\n          name: 'MuiWithWidth',\n          props: props\n        }),\n        initialWidth = _getThemeProps.initialWidth,\n        width = _getThemeProps.width,\n        other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n      var _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mountedState = _React$useState2[0],\n        setMountedState = _React$useState2[1];\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n\n      /**\r\n       * innerWidth |xs      sm      md      lg      xl\r\n       *            |-------|-------|-------|-------|------>\r\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\r\n       */\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n      var more = _extends({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}, other);\n\n      // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n      if (more.width === undefined) {\n        return null;\n      }\n      return /*#__PURE__*/_jsx(Component, _extends({}, more));\n    }\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\r\n       * As `window.innerWidth` is unavailable on the server,\r\n       * we default to rendering an empty component during the first mount.\r\n       * You might want to use a heuristic to approximate\r\n       * the screen width of the client browser screen width.\r\n       *\r\n       * For instance, you could be using the user-agent or the client-hints.\r\n       * https://caniuse.com/#search=client%20hint\r\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n      /**\r\n       * @ignore\r\n       */\n      theme: PropTypes.object,\n      /**\r\n       * Bypass the width calculation logic.\r\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n    return WithWidth;\n  };\n};\nexport default withWidth;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","arguments","length","undefined","indexOf","isWidthDown","withWidth","options","Component","_options$withTheme","withTheme","withThemeOption","_options$noSSR","noSSR","initialWidthOption","initialWidth","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","_React$useState","useState","_React$useState2","_slicedToArray","mountedState","setMountedState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","process","env","NODE_ENV","propTypes","oneOf","object","displayName","concat"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/material/Hidden/withWidth.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"initialWidth\", \"width\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDisplayName } from '@mui/utils';\r\nimport { getThemeProps } from '@mui/system';\r\nimport useTheme from '../styles/useTheme';\r\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\r\nimport useMediaQuery from '../useMediaQuery';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n\r\n// By default, returns true if screen width is the same or greater than the given breakpoint.\r\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\r\n  if (inclusive) {\r\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\r\n  }\r\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\r\n};\r\n\r\n// By default, returns true if screen width is less than the given breakpoint.\r\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\r\n  if (inclusive) {\r\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\r\n  }\r\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\r\n};\r\nconst withWidth = (options = {}) => Component => {\r\n  const {\r\n    withTheme: withThemeOption = false,\r\n    noSSR = false,\r\n    initialWidth: initialWidthOption\r\n  } = options;\r\n  function WithWidth(props) {\r\n    const contextTheme = useTheme();\r\n    const theme = props.theme || contextTheme;\r\n    const _getThemeProps = getThemeProps({\r\n        theme,\r\n        name: 'MuiWithWidth',\r\n        props\r\n      }),\r\n      {\r\n        initialWidth,\r\n        width\r\n      } = _getThemeProps,\r\n      other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\r\n    const [mountedState, setMountedState] = React.useState(false);\r\n    useEnhancedEffect(() => {\r\n      setMountedState(true);\r\n    }, []);\r\n\r\n    /**\r\n     * innerWidth |xs      sm      md      lg      xl\r\n     *            |-------|-------|-------|-------|------>\r\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\r\n     */\r\n    const keys = theme.breakpoints.keys.slice().reverse();\r\n    const widthComputed = keys.reduce((output, key) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const matches = useMediaQuery(theme.breakpoints.up(key));\r\n      return !output && matches ? key : output;\r\n    }, null);\r\n    const more = _extends({\r\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\r\n    }, withThemeOption ? {\r\n      theme\r\n    } : {}, other);\r\n\r\n    // When rendering the component on the server,\r\n    // we have no idea about the client browser screen width.\r\n    // In order to prevent blinks and help the reconciliation of the React tree\r\n    // we are not rendering the child component.\r\n    //\r\n    // An alternative is to use the `initialWidth` property.\r\n    if (more.width === undefined) {\r\n      return null;\r\n    }\r\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\r\n  }\r\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\r\n    /**\r\n     * As `window.innerWidth` is unavailable on the server,\r\n     * we default to rendering an empty component during the first mount.\r\n     * You might want to use a heuristic to approximate\r\n     * the screen width of the client browser screen width.\r\n     *\r\n     * For instance, you could be using the user-agent or the client-hints.\r\n     * https://caniuse.com/#search=client%20hint\r\n     */\r\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n    /**\r\n     * @ignore\r\n     */\r\n    theme: PropTypes.object,\r\n    /**\r\n     * Bypass the width calculation logic.\r\n     */\r\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\r\n  } : void 0;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\r\n  }\r\n  return WithWidth;\r\n};\r\nexport default withWidth;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}