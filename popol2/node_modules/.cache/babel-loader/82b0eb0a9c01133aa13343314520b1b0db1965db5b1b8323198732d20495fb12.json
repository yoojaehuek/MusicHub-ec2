{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { ListActionTypes } from './listActions.types';\nimport { listReducer as defaultReducer } from './listReducer';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { areArraysEqual } from '../utils/areArraysEqual';\nimport { useTextNavigation } from '../utils/useTextNavigation';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nvar EMPTY_OBJECT = {};\nvar NOOP = function NOOP() {};\nvar defaultItemComparer = function defaultItemComparer(optionA, optionB) {\n  return optionA === optionB;\n};\nvar defaultIsItemDisabled = function defaultIsItemDisabled() {\n  return false;\n};\nvar defaultItemStringifier = function defaultItemStringifier(item) {\n  return typeof item === 'string' ? item : String(item);\n};\nvar defaultGetInitialState = function defaultGetInitialState() {\n  return {\n    highlightedValue: null,\n    selectedValues: []\n  };\n};\n\n/**\r\n * The useList is a lower-level utility that is used to build list-like components.\r\n * It's used to manage the state of the list and its items.\r\n *\r\n * Supports highlighting a single item and selecting an arbitrary number of items.\r\n *\r\n * The state of the list is managed by a controllable reducer - that is a reducer that can have its state\r\n * controlled from outside.\r\n *\r\n * By default, the state consists of `selectedValues` and `highlightedValue` but can be extended by the caller of the hook.\r\n * Also the actions that can be dispatched and the reducer function can be defined externally.\r\n *\r\n * @template ItemValue The type of the item values.\r\n * @template State The type of the list state. This should be a subtype of `ListState<ItemValue>`.\r\n * @template CustomAction The type of the actions that can be dispatched (besides the standard ListAction).\r\n * @template CustomActionContext The shape of additional properties that will be added to actions when dispatched.\r\n *\r\n * @ignore - internal hook.\r\n */\nfunction useList(params) {\n  var _params$controlledPro = params.controlledProps,\n    controlledProps = _params$controlledPro === void 0 ? EMPTY_OBJECT : _params$controlledPro,\n    _params$disabledItems = params.disabledItemsFocusable,\n    disabledItemsFocusable = _params$disabledItems === void 0 ? false : _params$disabledItems,\n    _params$disableListWr = params.disableListWrap,\n    disableListWrap = _params$disableListWr === void 0 ? false : _params$disableListWr,\n    _params$focusManageme = params.focusManagement,\n    focusManagement = _params$focusManageme === void 0 ? 'activeDescendant' : _params$focusManageme,\n    _params$getInitialSta = params.getInitialState,\n    getInitialState = _params$getInitialSta === void 0 ? defaultGetInitialState : _params$getInitialSta,\n    getItemDomElement = params.getItemDomElement,\n    getItemId = params.getItemId,\n    _params$isItemDisable = params.isItemDisabled,\n    isItemDisabled = _params$isItemDisable === void 0 ? defaultIsItemDisabled : _params$isItemDisable,\n    externalListRef = params.rootRef,\n    _params$onStateChange = params.onStateChange,\n    onStateChange = _params$onStateChange === void 0 ? NOOP : _params$onStateChange,\n    items = params.items,\n    _params$itemComparer = params.itemComparer,\n    itemComparer = _params$itemComparer === void 0 ? defaultItemComparer : _params$itemComparer,\n    _params$getItemAsStri = params.getItemAsString,\n    getItemAsString = _params$getItemAsStri === void 0 ? defaultItemStringifier : _params$getItemAsStri,\n    onChange = params.onChange,\n    onHighlightChange = params.onHighlightChange,\n    onItemsChange = params.onItemsChange,\n    _params$orientation = params.orientation,\n    orientation = _params$orientation === void 0 ? 'vertical' : _params$orientation,\n    _params$pageSize = params.pageSize,\n    pageSize = _params$pageSize === void 0 ? 5 : _params$pageSize,\n    _params$reducerAction = params.reducerActionContext,\n    reducerActionContext = _params$reducerAction === void 0 ? EMPTY_OBJECT : _params$reducerAction,\n    _params$selectionMode = params.selectionMode,\n    selectionMode = _params$selectionMode === void 0 ? 'single' : _params$selectionMode,\n    externalReducer = params.stateReducer,\n    _params$componentName = params.componentName,\n    componentName = _params$componentName === void 0 ? 'useList' : _params$componentName;\n  if (process.env.NODE_ENV !== 'production') {\n    if (focusManagement === 'DOM' && getItemDomElement == null) {\n      throw new Error('useList: The `getItemDomElement` prop is required when using the `DOM` focus management.');\n    }\n    if (focusManagement === 'activeDescendant' && getItemId == null) {\n      throw new Error('useList: The `getItemId` prop is required when using the `activeDescendant` focus management.');\n    }\n  }\n  var listRef = React.useRef(null);\n  var handleRef = useForkRef(externalListRef, listRef);\n  var handleHighlightChange = React.useCallback(function (event, value, reason) {\n    onHighlightChange == null || onHighlightChange(event, value, reason);\n    if (focusManagement === 'DOM' && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {\n      var _getItemDomElement;\n      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null || _getItemDomElement.focus();\n    }\n  }, [getItemDomElement, onHighlightChange, focusManagement]);\n  var stateComparers = React.useMemo(function () {\n    return {\n      highlightedValue: itemComparer,\n      selectedValues: function selectedValues(valuesArray1, valuesArray2) {\n        return areArraysEqual(valuesArray1, valuesArray2, itemComparer);\n      }\n    };\n  }, [itemComparer]);\n\n  // This gets called whenever a reducer changes the state.\n  var handleStateChange = React.useCallback(function (event, field, value, reason, state) {\n    onStateChange == null || onStateChange(event, field, value, reason, state);\n    switch (field) {\n      case 'highlightedValue':\n        handleHighlightChange(event, value, reason);\n        break;\n      case 'selectedValues':\n        onChange == null || onChange(event, value, reason);\n        break;\n      default:\n        break;\n    }\n  }, [handleHighlightChange, onChange, onStateChange]);\n\n  // The following object is added to each action when it's dispatched.\n  // It's accessible in the reducer via the `action.context` field.\n  var listActionContext = React.useMemo(function () {\n    return {\n      disabledItemsFocusable: disabledItemsFocusable,\n      disableListWrap: disableListWrap,\n      focusManagement: focusManagement,\n      isItemDisabled: isItemDisabled,\n      itemComparer: itemComparer,\n      items: items,\n      getItemAsString: getItemAsString,\n      onHighlightChange: handleHighlightChange,\n      orientation: orientation,\n      pageSize: pageSize,\n      selectionMode: selectionMode,\n      stateComparers: stateComparers\n    };\n  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize, selectionMode, stateComparers]);\n  var initialState = getInitialState();\n  var reducer = externalReducer != null ? externalReducer : defaultReducer;\n  var actionContext = React.useMemo(function () {\n    return _extends({}, reducerActionContext, listActionContext);\n  }, [reducerActionContext, listActionContext]);\n  var _useControllableReduc = useControllableReducer({\n      reducer: reducer,\n      actionContext: actionContext,\n      initialState: initialState,\n      controlledProps: controlledProps,\n      stateComparers: stateComparers,\n      onStateChange: handleStateChange,\n      componentName: componentName\n    }),\n    _useControllableReduc2 = _slicedToArray(_useControllableReduc, 2),\n    state = _useControllableReduc2[0],\n    dispatch = _useControllableReduc2[1];\n  var highlightedValue = state.highlightedValue,\n    selectedValues = state.selectedValues;\n  var handleTextNavigation = useTextNavigation(function (searchString, event) {\n    return dispatch({\n      type: ListActionTypes.textNavigation,\n      event: event,\n      searchString: searchString\n    });\n  });\n  var previousItems = React.useRef([]);\n  React.useEffect(function () {\n    // Whenever the `items` object changes, we need to determine if the actual items changed.\n    // If they did, we need to dispatch an `itemsChange` action, so the selected/highlighted state is updated.\n    if (areArraysEqual(previousItems.current, items, itemComparer)) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemsChange,\n      event: null,\n      items: items,\n      previousItems: previousItems.current\n    });\n    previousItems.current = items;\n    onItemsChange == null || onItemsChange(items);\n  }, [items, itemComparer, dispatch, onItemsChange]);\n  var createHandleKeyDown = function createHandleKeyDown(externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onK;\n      (_externalHandlers$onK = externalHandlers.onKeyDown) == null || _externalHandlers$onK.call(externalHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      var keysToPreventDefault = ['Home', 'End', 'PageUp', 'PageDown'];\n      if (orientation === 'vertical') {\n        keysToPreventDefault.push('ArrowUp', 'ArrowDown');\n      } else {\n        keysToPreventDefault.push('ArrowLeft', 'ArrowRight');\n      }\n      if (focusManagement === 'activeDescendant') {\n        // When the child element is focused using the activeDescendant attribute,\n        // the list handles keyboard events on its behalf.\n        // We have to `preventDefault()` is this case to prevent the browser from\n        // scrolling the view when space is pressed or submitting forms when enter is pressed.\n        keysToPreventDefault.push(' ', 'Enter');\n      }\n      if (keysToPreventDefault.includes(event.key)) {\n        event.preventDefault();\n      }\n      dispatch({\n        type: ListActionTypes.keyDown,\n        key: event.key,\n        event: event\n      });\n      handleTextNavigation(event);\n    };\n  };\n  var createHandleBlur = function createHandleBlur(externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onB, _listRef$current;\n      (_externalHandlers$onB = externalHandlers.onBlur) == null || _externalHandlers$onB.call(externalHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {\n        // focus remains within the list\n        return;\n      }\n      dispatch({\n        type: ListActionTypes.blur,\n        event: event\n      });\n    };\n  };\n  var getRootProps = function getRootProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? getItemId(highlightedValue) : undefined,\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    });\n  };\n  var getItemState = React.useCallback(function (item) {\n    var selected = (selectedValues != null ? selectedValues : []).some(function (value) {\n      return value != null && itemComparer(item, value);\n    });\n    var highlighted = highlightedValue != null && itemComparer(item, highlightedValue);\n    var focusable = focusManagement === 'DOM';\n    return {\n      focusable: focusable,\n      highlighted: highlighted,\n      selected: selected\n    };\n  }, [itemComparer, selectedValues, highlightedValue, focusManagement]);\n  var contextValue = React.useMemo(function () {\n    return {\n      dispatch: dispatch,\n      getItemState: getItemState\n    };\n  }, [dispatch, getItemState]);\n  React.useDebugValue({\n    state: state\n  });\n  return {\n    contextValue: contextValue,\n    dispatch: dispatch,\n    getRootProps: getRootProps,\n    rootRef: handleRef,\n    state: state\n  };\n}\nexport { useList };","map":{"version":3,"names":["_slicedToArray","_extends","React","unstable_useForkRef","useForkRef","ListActionTypes","listReducer","defaultReducer","useControllableReducer","areArraysEqual","useTextNavigation","extractEventHandlers","EMPTY_OBJECT","NOOP","defaultItemComparer","optionA","optionB","defaultIsItemDisabled","defaultItemStringifier","item","String","defaultGetInitialState","highlightedValue","selectedValues","useList","params","_params$controlledPro","controlledProps","_params$disabledItems","disabledItemsFocusable","_params$disableListWr","disableListWrap","_params$focusManageme","focusManagement","_params$getInitialSta","getInitialState","getItemDomElement","getItemId","_params$isItemDisable","isItemDisabled","externalListRef","rootRef","_params$onStateChange","onStateChange","items","_params$itemComparer","itemComparer","_params$getItemAsStri","getItemAsString","onChange","onHighlightChange","onItemsChange","_params$orientation","orientation","_params$pageSize","pageSize","_params$reducerAction","reducerActionContext","_params$selectionMode","selectionMode","externalReducer","stateReducer","_params$componentName","componentName","process","env","NODE_ENV","Error","listRef","useRef","handleRef","handleHighlightChange","useCallback","event","value","reason","itemClick","keyDown","textNavigation","_getItemDomElement","focus","stateComparers","useMemo","valuesArray1","valuesArray2","handleStateChange","field","state","listActionContext","initialState","reducer","actionContext","_useControllableReduc","_useControllableReduc2","dispatch","handleTextNavigation","searchString","type","previousItems","useEffect","current","itemsChange","createHandleKeyDown","externalHandlers","_externalHandlers$onK","onKeyDown","call","defaultMuiPrevented","keysToPreventDefault","push","includes","key","preventDefault","createHandleBlur","_externalHandlers$onB","_listRef$current","onBlur","contains","relatedTarget","blur","getRootProps","externalProps","arguments","length","undefined","externalEventHandlers","tabIndex","ref","getItemState","selected","some","highlighted","focusable","contextValue","useDebugValue"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/base/useList/useList.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { ListActionTypes } from './listActions.types';\r\nimport { listReducer as defaultReducer } from './listReducer';\r\nimport { useControllableReducer } from '../utils/useControllableReducer';\r\nimport { areArraysEqual } from '../utils/areArraysEqual';\r\nimport { useTextNavigation } from '../utils/useTextNavigation';\r\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\r\nconst EMPTY_OBJECT = {};\r\nconst NOOP = () => {};\r\nconst defaultItemComparer = (optionA, optionB) => optionA === optionB;\r\nconst defaultIsItemDisabled = () => false;\r\nconst defaultItemStringifier = item => typeof item === 'string' ? item : String(item);\r\nconst defaultGetInitialState = () => ({\r\n  highlightedValue: null,\r\n  selectedValues: []\r\n});\r\n\r\n/**\r\n * The useList is a lower-level utility that is used to build list-like components.\r\n * It's used to manage the state of the list and its items.\r\n *\r\n * Supports highlighting a single item and selecting an arbitrary number of items.\r\n *\r\n * The state of the list is managed by a controllable reducer - that is a reducer that can have its state\r\n * controlled from outside.\r\n *\r\n * By default, the state consists of `selectedValues` and `highlightedValue` but can be extended by the caller of the hook.\r\n * Also the actions that can be dispatched and the reducer function can be defined externally.\r\n *\r\n * @template ItemValue The type of the item values.\r\n * @template State The type of the list state. This should be a subtype of `ListState<ItemValue>`.\r\n * @template CustomAction The type of the actions that can be dispatched (besides the standard ListAction).\r\n * @template CustomActionContext The shape of additional properties that will be added to actions when dispatched.\r\n *\r\n * @ignore - internal hook.\r\n */\r\nfunction useList(params) {\r\n  const {\r\n    controlledProps = EMPTY_OBJECT,\r\n    disabledItemsFocusable = false,\r\n    disableListWrap = false,\r\n    focusManagement = 'activeDescendant',\r\n    getInitialState = defaultGetInitialState,\r\n    getItemDomElement,\r\n    getItemId,\r\n    isItemDisabled = defaultIsItemDisabled,\r\n    rootRef: externalListRef,\r\n    onStateChange = NOOP,\r\n    items,\r\n    itemComparer = defaultItemComparer,\r\n    getItemAsString = defaultItemStringifier,\r\n    onChange,\r\n    onHighlightChange,\r\n    onItemsChange,\r\n    orientation = 'vertical',\r\n    pageSize = 5,\r\n    reducerActionContext = EMPTY_OBJECT,\r\n    selectionMode = 'single',\r\n    stateReducer: externalReducer,\r\n    componentName = 'useList'\r\n  } = params;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (focusManagement === 'DOM' && getItemDomElement == null) {\r\n      throw new Error('useList: The `getItemDomElement` prop is required when using the `DOM` focus management.');\r\n    }\r\n    if (focusManagement === 'activeDescendant' && getItemId == null) {\r\n      throw new Error('useList: The `getItemId` prop is required when using the `activeDescendant` focus management.');\r\n    }\r\n  }\r\n  const listRef = React.useRef(null);\r\n  const handleRef = useForkRef(externalListRef, listRef);\r\n  const handleHighlightChange = React.useCallback((event, value, reason) => {\r\n    onHighlightChange == null || onHighlightChange(event, value, reason);\r\n    if (focusManagement === 'DOM' && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {\r\n      var _getItemDomElement;\r\n      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null || _getItemDomElement.focus();\r\n    }\r\n  }, [getItemDomElement, onHighlightChange, focusManagement]);\r\n  const stateComparers = React.useMemo(() => ({\r\n    highlightedValue: itemComparer,\r\n    selectedValues: (valuesArray1, valuesArray2) => areArraysEqual(valuesArray1, valuesArray2, itemComparer)\r\n  }), [itemComparer]);\r\n\r\n  // This gets called whenever a reducer changes the state.\r\n  const handleStateChange = React.useCallback((event, field, value, reason, state) => {\r\n    onStateChange == null || onStateChange(event, field, value, reason, state);\r\n    switch (field) {\r\n      case 'highlightedValue':\r\n        handleHighlightChange(event, value, reason);\r\n        break;\r\n      case 'selectedValues':\r\n        onChange == null || onChange(event, value, reason);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [handleHighlightChange, onChange, onStateChange]);\r\n\r\n  // The following object is added to each action when it's dispatched.\r\n  // It's accessible in the reducer via the `action.context` field.\r\n  const listActionContext = React.useMemo(() => {\r\n    return {\r\n      disabledItemsFocusable,\r\n      disableListWrap,\r\n      focusManagement,\r\n      isItemDisabled,\r\n      itemComparer,\r\n      items,\r\n      getItemAsString,\r\n      onHighlightChange: handleHighlightChange,\r\n      orientation,\r\n      pageSize,\r\n      selectionMode,\r\n      stateComparers\r\n    };\r\n  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize, selectionMode, stateComparers]);\r\n  const initialState = getInitialState();\r\n  const reducer = externalReducer != null ? externalReducer : defaultReducer;\r\n  const actionContext = React.useMemo(() => _extends({}, reducerActionContext, listActionContext), [reducerActionContext, listActionContext]);\r\n  const [state, dispatch] = useControllableReducer({\r\n    reducer,\r\n    actionContext,\r\n    initialState: initialState,\r\n    controlledProps,\r\n    stateComparers,\r\n    onStateChange: handleStateChange,\r\n    componentName\r\n  });\r\n  const {\r\n    highlightedValue,\r\n    selectedValues\r\n  } = state;\r\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\r\n    type: ListActionTypes.textNavigation,\r\n    event,\r\n    searchString\r\n  }));\r\n  const previousItems = React.useRef([]);\r\n  React.useEffect(() => {\r\n    // Whenever the `items` object changes, we need to determine if the actual items changed.\r\n    // If they did, we need to dispatch an `itemsChange` action, so the selected/highlighted state is updated.\r\n    if (areArraysEqual(previousItems.current, items, itemComparer)) {\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemsChange,\r\n      event: null,\r\n      items,\r\n      previousItems: previousItems.current\r\n    });\r\n    previousItems.current = items;\r\n    onItemsChange == null || onItemsChange(items);\r\n  }, [items, itemComparer, dispatch, onItemsChange]);\r\n  const createHandleKeyDown = externalHandlers => event => {\r\n    var _externalHandlers$onK;\r\n    (_externalHandlers$onK = externalHandlers.onKeyDown) == null || _externalHandlers$onK.call(externalHandlers, event);\r\n    if (event.defaultMuiPrevented) {\r\n      return;\r\n    }\r\n    const keysToPreventDefault = ['Home', 'End', 'PageUp', 'PageDown'];\r\n    if (orientation === 'vertical') {\r\n      keysToPreventDefault.push('ArrowUp', 'ArrowDown');\r\n    } else {\r\n      keysToPreventDefault.push('ArrowLeft', 'ArrowRight');\r\n    }\r\n    if (focusManagement === 'activeDescendant') {\r\n      // When the child element is focused using the activeDescendant attribute,\r\n      // the list handles keyboard events on its behalf.\r\n      // We have to `preventDefault()` is this case to prevent the browser from\r\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\r\n      keysToPreventDefault.push(' ', 'Enter');\r\n    }\r\n    if (keysToPreventDefault.includes(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.keyDown,\r\n      key: event.key,\r\n      event\r\n    });\r\n    handleTextNavigation(event);\r\n  };\r\n  const createHandleBlur = externalHandlers => event => {\r\n    var _externalHandlers$onB, _listRef$current;\r\n    (_externalHandlers$onB = externalHandlers.onBlur) == null || _externalHandlers$onB.call(externalHandlers, event);\r\n    if (event.defaultMuiPrevented) {\r\n      return;\r\n    }\r\n    if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {\r\n      // focus remains within the list\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.blur,\r\n      event\r\n    });\r\n  };\r\n  const getRootProps = (externalProps = {}) => {\r\n    const externalEventHandlers = extractEventHandlers(externalProps);\r\n    return _extends({}, externalProps, {\r\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? getItemId(highlightedValue) : undefined,\r\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\r\n      ref: handleRef\r\n    }, externalEventHandlers, {\r\n      onBlur: createHandleBlur(externalEventHandlers),\r\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\r\n    });\r\n  };\r\n  const getItemState = React.useCallback(item => {\r\n    const selected = (selectedValues != null ? selectedValues : []).some(value => value != null && itemComparer(item, value));\r\n    const highlighted = highlightedValue != null && itemComparer(item, highlightedValue);\r\n    const focusable = focusManagement === 'DOM';\r\n    return {\r\n      focusable,\r\n      highlighted,\r\n      selected\r\n    };\r\n  }, [itemComparer, selectedValues, highlightedValue, focusManagement]);\r\n  const contextValue = React.useMemo(() => ({\r\n    dispatch,\r\n    getItemState\r\n  }), [dispatch, getItemState]);\r\n  React.useDebugValue({\r\n    state\r\n  });\r\n  return {\r\n    contextValue,\r\n    dispatch,\r\n    getRootProps,\r\n    rootRef: handleRef,\r\n    state\r\n  };\r\n}\r\nexport { useList };"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,cAAA;AAEb,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,WAAW,IAAIC,cAAc,QAAQ,eAAe;AAC7D,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,IAAMC,YAAY,GAAG,CAAC,CAAC;AACvB,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAAC,CAAC;AACrB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,OAAO,EAAEC,OAAO;EAAA,OAAKD,OAAO,KAAKC,OAAO;AAAA;AACrE,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA;EAAA,OAAS,KAAK;AAAA;AACzC,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAGC,IAAI;EAAA,OAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC;AAAA;AACrF,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA;EAAA,OAAU;IACpCC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE;EAClB,CAAC;AAAA,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,MAAM,EAAE;EACvB,IAAAC,qBAAA,GAuBID,MAAM,CAtBRE,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAGd,YAAY,GAAAc,qBAAA;IAAAE,qBAAA,GAsB5BH,MAAM,CArBRI,sBAAsB;IAAtBA,sBAAsB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,qBAAA,GAqB5BL,MAAM,CApBRM,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,qBAAA,GAoBrBP,MAAM,CAnBRQ,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG,kBAAkB,GAAAA,qBAAA;IAAAE,qBAAA,GAmBlCT,MAAM,CAlBRU,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAGb,sBAAsB,GAAAa,qBAAA;IACxCE,iBAAiB,GAiBfX,MAAM,CAjBRW,iBAAiB;IACjBC,SAAS,GAgBPZ,MAAM,CAhBRY,SAAS;IAAAC,qBAAA,GAgBPb,MAAM,CAfRc,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAGrB,qBAAqB,GAAAqB,qBAAA;IAC7BE,eAAe,GActBf,MAAM,CAdRgB,OAAO;IAAAC,qBAAA,GAcLjB,MAAM,CAbRkB,aAAa;IAAbA,aAAa,GAAAD,qBAAA,cAAG7B,IAAI,GAAA6B,qBAAA;IACpBE,KAAK,GAYHnB,MAAM,CAZRmB,KAAK;IAAAC,oBAAA,GAYHpB,MAAM,CAXRqB,YAAY;IAAZA,YAAY,GAAAD,oBAAA,cAAG/B,mBAAmB,GAAA+B,oBAAA;IAAAE,qBAAA,GAWhCtB,MAAM,CAVRuB,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG7B,sBAAsB,GAAA6B,qBAAA;IACxCE,QAAQ,GASNxB,MAAM,CATRwB,QAAQ;IACRC,iBAAiB,GAQfzB,MAAM,CARRyB,iBAAiB;IACjBC,aAAa,GAOX1B,MAAM,CAPR0B,aAAa;IAAAC,mBAAA,GAOX3B,MAAM,CANR4B,WAAW;IAAXA,WAAW,GAAAD,mBAAA,cAAG,UAAU,GAAAA,mBAAA;IAAAE,gBAAA,GAMtB7B,MAAM,CALR8B,QAAQ;IAARA,QAAQ,GAAAD,gBAAA,cAAG,CAAC,GAAAA,gBAAA;IAAAE,qBAAA,GAKV/B,MAAM,CAJRgC,oBAAoB;IAApBA,oBAAoB,GAAAD,qBAAA,cAAG5C,YAAY,GAAA4C,qBAAA;IAAAE,qBAAA,GAIjCjC,MAAM,CAHRkC,aAAa;IAAbA,aAAa,GAAAD,qBAAA,cAAG,QAAQ,GAAAA,qBAAA;IACVE,eAAe,GAE3BnC,MAAM,CAFRoC,YAAY;IAAAC,qBAAA,GAEVrC,MAAM,CADRsC,aAAa;IAAbA,aAAa,GAAAD,qBAAA,cAAG,SAAS,GAAAA,qBAAA;EAE3B,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIjC,eAAe,KAAK,KAAK,IAAIG,iBAAiB,IAAI,IAAI,EAAE;MAC1D,MAAM,IAAI+B,KAAK,CAAC,0FAA0F,CAAC;IAC7G;IACA,IAAIlC,eAAe,KAAK,kBAAkB,IAAII,SAAS,IAAI,IAAI,EAAE;MAC/D,MAAM,IAAI8B,KAAK,CAAC,+FAA+F,CAAC;IAClH;EACF;EACA,IAAMC,OAAO,GAAGlE,KAAK,CAACmE,MAAM,CAAC,IAAI,CAAC;EAClC,IAAMC,SAAS,GAAGlE,UAAU,CAACoC,eAAe,EAAE4B,OAAO,CAAC;EACtD,IAAMG,qBAAqB,GAAGrE,KAAK,CAACsE,WAAW,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAK;IACxEzB,iBAAiB,IAAI,IAAI,IAAIA,iBAAiB,CAACuB,KAAK,EAAEC,KAAK,EAAEC,MAAM,CAAC;IACpE,IAAI1C,eAAe,KAAK,KAAK,IAAIyC,KAAK,IAAI,IAAI,KAAKC,MAAM,KAAKtE,eAAe,CAACuE,SAAS,IAAID,MAAM,KAAKtE,eAAe,CAACwE,OAAO,IAAIF,MAAM,KAAKtE,eAAe,CAACyE,cAAc,CAAC,EAAE;MAC3K,IAAIC,kBAAkB;MACtB3C,iBAAiB,IAAI,IAAI,IAAI,CAAC2C,kBAAkB,GAAG3C,iBAAiB,CAACsC,KAAK,CAAC,KAAK,IAAI,IAAIK,kBAAkB,CAACC,KAAK,CAAC,CAAC;IACpH;EACF,CAAC,EAAE,CAAC5C,iBAAiB,EAAEc,iBAAiB,EAAEjB,eAAe,CAAC,CAAC;EAC3D,IAAMgD,cAAc,GAAG/E,KAAK,CAACgF,OAAO,CAAC;IAAA,OAAO;MAC1C5D,gBAAgB,EAAEwB,YAAY;MAC9BvB,cAAc,EAAE,SAAAA,eAAC4D,YAAY,EAAEC,YAAY;QAAA,OAAK3E,cAAc,CAAC0E,YAAY,EAAEC,YAAY,EAAEtC,YAAY,CAAC;MAAA;IAC1G,CAAC;EAAA,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAEnB;EACA,IAAMuC,iBAAiB,GAAGnF,KAAK,CAACsE,WAAW,CAAC,UAACC,KAAK,EAAEa,KAAK,EAAEZ,KAAK,EAAEC,MAAM,EAAEY,KAAK,EAAK;IAClF5C,aAAa,IAAI,IAAI,IAAIA,aAAa,CAAC8B,KAAK,EAAEa,KAAK,EAAEZ,KAAK,EAAEC,MAAM,EAAEY,KAAK,CAAC;IAC1E,QAAQD,KAAK;MACX,KAAK,kBAAkB;QACrBf,qBAAqB,CAACE,KAAK,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAC3C;MACF,KAAK,gBAAgB;QACnB1B,QAAQ,IAAI,IAAI,IAAIA,QAAQ,CAACwB,KAAK,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAClD;MACF;QACE;IACJ;EACF,CAAC,EAAE,CAACJ,qBAAqB,EAAEtB,QAAQ,EAAEN,aAAa,CAAC,CAAC;;EAEpD;EACA;EACA,IAAM6C,iBAAiB,GAAGtF,KAAK,CAACgF,OAAO,CAAC,YAAM;IAC5C,OAAO;MACLrD,sBAAsB,EAAtBA,sBAAsB;MACtBE,eAAe,EAAfA,eAAe;MACfE,eAAe,EAAfA,eAAe;MACfM,cAAc,EAAdA,cAAc;MACdO,YAAY,EAAZA,YAAY;MACZF,KAAK,EAALA,KAAK;MACLI,eAAe,EAAfA,eAAe;MACfE,iBAAiB,EAAEqB,qBAAqB;MACxClB,WAAW,EAAXA,WAAW;MACXE,QAAQ,EAARA,QAAQ;MACRI,aAAa,EAAbA,aAAa;MACbsB,cAAc,EAAdA;IACF,CAAC;EACH,CAAC,EAAE,CAACpD,sBAAsB,EAAEE,eAAe,EAAEE,eAAe,EAAEM,cAAc,EAAEO,YAAY,EAAEF,KAAK,EAAEI,eAAe,EAAEuB,qBAAqB,EAAElB,WAAW,EAAEE,QAAQ,EAAEI,aAAa,EAAEsB,cAAc,CAAC,CAAC;EACjM,IAAMQ,YAAY,GAAGtD,eAAe,CAAC,CAAC;EACtC,IAAMuD,OAAO,GAAG9B,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGrD,cAAc;EAC1E,IAAMoF,aAAa,GAAGzF,KAAK,CAACgF,OAAO,CAAC;IAAA,OAAMjF,QAAQ,CAAC,CAAC,CAAC,EAAEwD,oBAAoB,EAAE+B,iBAAiB,CAAC;EAAA,GAAE,CAAC/B,oBAAoB,EAAE+B,iBAAiB,CAAC,CAAC;EAC3I,IAAAI,qBAAA,GAA0BpF,sBAAsB,CAAC;MAC/CkF,OAAO,EAAPA,OAAO;MACPC,aAAa,EAAbA,aAAa;MACbF,YAAY,EAAEA,YAAY;MAC1B9D,eAAe,EAAfA,eAAe;MACfsD,cAAc,EAAdA,cAAc;MACdtC,aAAa,EAAE0C,iBAAiB;MAChCtB,aAAa,EAAbA;IACF,CAAC,CAAC;IAAA8B,sBAAA,GAAA7F,cAAA,CAAA4F,qBAAA;IARKL,KAAK,GAAAM,sBAAA;IAAEC,QAAQ,GAAAD,sBAAA;EAStB,IACEvE,gBAAgB,GAEdiE,KAAK,CAFPjE,gBAAgB;IAChBC,cAAc,GACZgE,KAAK,CADPhE,cAAc;EAEhB,IAAMwE,oBAAoB,GAAGrF,iBAAiB,CAAC,UAACsF,YAAY,EAAEvB,KAAK;IAAA,OAAKqB,QAAQ,CAAC;MAC/EG,IAAI,EAAE5F,eAAe,CAACyE,cAAc;MACpCL,KAAK,EAALA,KAAK;MACLuB,YAAY,EAAZA;IACF,CAAC,CAAC;EAAA,EAAC;EACH,IAAME,aAAa,GAAGhG,KAAK,CAACmE,MAAM,CAAC,EAAE,CAAC;EACtCnE,KAAK,CAACiG,SAAS,CAAC,YAAM;IACpB;IACA;IACA,IAAI1F,cAAc,CAACyF,aAAa,CAACE,OAAO,EAAExD,KAAK,EAAEE,YAAY,CAAC,EAAE;MAC9D;IACF;IACAgD,QAAQ,CAAC;MACPG,IAAI,EAAE5F,eAAe,CAACgG,WAAW;MACjC5B,KAAK,EAAE,IAAI;MACX7B,KAAK,EAALA,KAAK;MACLsD,aAAa,EAAEA,aAAa,CAACE;IAC/B,CAAC,CAAC;IACFF,aAAa,CAACE,OAAO,GAAGxD,KAAK;IAC7BO,aAAa,IAAI,IAAI,IAAIA,aAAa,CAACP,KAAK,CAAC;EAC/C,CAAC,EAAE,CAACA,KAAK,EAAEE,YAAY,EAAEgD,QAAQ,EAAE3C,aAAa,CAAC,CAAC;EAClD,IAAMmD,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGC,gBAAgB;IAAA,OAAI,UAAA9B,KAAK,EAAI;MACvD,IAAI+B,qBAAqB;MACzB,CAACA,qBAAqB,GAAGD,gBAAgB,CAACE,SAAS,KAAK,IAAI,IAAID,qBAAqB,CAACE,IAAI,CAACH,gBAAgB,EAAE9B,KAAK,CAAC;MACnH,IAAIA,KAAK,CAACkC,mBAAmB,EAAE;QAC7B;MACF;MACA,IAAMC,oBAAoB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC;MAClE,IAAIvD,WAAW,KAAK,UAAU,EAAE;QAC9BuD,oBAAoB,CAACC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;MACnD,CAAC,MAAM;QACLD,oBAAoB,CAACC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;MACtD;MACA,IAAI5E,eAAe,KAAK,kBAAkB,EAAE;QAC1C;QACA;QACA;QACA;QACA2E,oBAAoB,CAACC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;MACzC;MACA,IAAID,oBAAoB,CAACE,QAAQ,CAACrC,KAAK,CAACsC,GAAG,CAAC,EAAE;QAC5CtC,KAAK,CAACuC,cAAc,CAAC,CAAC;MACxB;MACAlB,QAAQ,CAAC;QACPG,IAAI,EAAE5F,eAAe,CAACwE,OAAO;QAC7BkC,GAAG,EAAEtC,KAAK,CAACsC,GAAG;QACdtC,KAAK,EAALA;MACF,CAAC,CAAC;MACFsB,oBAAoB,CAACtB,KAAK,CAAC;IAC7B,CAAC;EAAA;EACD,IAAMwC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGV,gBAAgB;IAAA,OAAI,UAAA9B,KAAK,EAAI;MACpD,IAAIyC,qBAAqB,EAAEC,gBAAgB;MAC3C,CAACD,qBAAqB,GAAGX,gBAAgB,CAACa,MAAM,KAAK,IAAI,IAAIF,qBAAqB,CAACR,IAAI,CAACH,gBAAgB,EAAE9B,KAAK,CAAC;MAChH,IAAIA,KAAK,CAACkC,mBAAmB,EAAE;QAC7B;MACF;MACA,IAAI,CAACQ,gBAAgB,GAAG/C,OAAO,CAACgC,OAAO,KAAK,IAAI,IAAIe,gBAAgB,CAACE,QAAQ,CAAC5C,KAAK,CAAC6C,aAAa,CAAC,EAAE;QAClG;QACA;MACF;MACAxB,QAAQ,CAAC;QACPG,IAAI,EAAE5F,eAAe,CAACkH,IAAI;QAC1B9C,KAAK,EAALA;MACF,CAAC,CAAC;IACJ,CAAC;EAAA;EACD,IAAM+C,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAA2B;IAAA,IAAvBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACtC,IAAMG,qBAAqB,GAAGlH,oBAAoB,CAAC8G,aAAa,CAAC;IACjE,OAAOxH,QAAQ,CAAC,CAAC,CAAC,EAAEwH,aAAa,EAAE;MACjC,uBAAuB,EAAExF,eAAe,KAAK,kBAAkB,IAAIX,gBAAgB,IAAI,IAAI,GAAGe,SAAS,CAACf,gBAAgB,CAAC,GAAGsG,SAAS;MACrIE,QAAQ,EAAE7F,eAAe,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5C8F,GAAG,EAAEzD;IACP,CAAC,EAAEuD,qBAAqB,EAAE;MACxBT,MAAM,EAAEH,gBAAgB,CAACY,qBAAqB,CAAC;MAC/CpB,SAAS,EAAEH,mBAAmB,CAACuB,qBAAqB;IACtD,CAAC,CAAC;EACJ,CAAC;EACD,IAAMG,YAAY,GAAG9H,KAAK,CAACsE,WAAW,CAAC,UAAArD,IAAI,EAAI;IAC7C,IAAM8G,QAAQ,GAAG,CAAC1G,cAAc,IAAI,IAAI,GAAGA,cAAc,GAAG,EAAE,EAAE2G,IAAI,CAAC,UAAAxD,KAAK;MAAA,OAAIA,KAAK,IAAI,IAAI,IAAI5B,YAAY,CAAC3B,IAAI,EAAEuD,KAAK,CAAC;IAAA,EAAC;IACzH,IAAMyD,WAAW,GAAG7G,gBAAgB,IAAI,IAAI,IAAIwB,YAAY,CAAC3B,IAAI,EAAEG,gBAAgB,CAAC;IACpF,IAAM8G,SAAS,GAAGnG,eAAe,KAAK,KAAK;IAC3C,OAAO;MACLmG,SAAS,EAATA,SAAS;MACTD,WAAW,EAAXA,WAAW;MACXF,QAAQ,EAARA;IACF,CAAC;EACH,CAAC,EAAE,CAACnF,YAAY,EAAEvB,cAAc,EAAED,gBAAgB,EAAEW,eAAe,CAAC,CAAC;EACrE,IAAMoG,YAAY,GAAGnI,KAAK,CAACgF,OAAO,CAAC;IAAA,OAAO;MACxCY,QAAQ,EAARA,QAAQ;MACRkC,YAAY,EAAZA;IACF,CAAC;EAAA,CAAC,EAAE,CAAClC,QAAQ,EAAEkC,YAAY,CAAC,CAAC;EAC7B9H,KAAK,CAACoI,aAAa,CAAC;IAClB/C,KAAK,EAALA;EACF,CAAC,CAAC;EACF,OAAO;IACL8C,YAAY,EAAZA,YAAY;IACZvC,QAAQ,EAARA,QAAQ;IACR0B,YAAY,EAAZA,YAAY;IACZ/E,OAAO,EAAE6B,SAAS;IAClBiB,KAAK,EAALA;EACF,CAAC;AACH;AACA,SAAS/D,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}