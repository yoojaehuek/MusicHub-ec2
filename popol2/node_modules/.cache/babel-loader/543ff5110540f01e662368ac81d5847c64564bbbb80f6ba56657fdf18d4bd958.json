{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"lastTransitionedPropertyOnEnter\", \"lastTransitionedPropertyOnExit\", \"enterClassName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\r\n * A utility component that hooks up to the Base UI transitions API and\r\n * applies a CSS transition to its children when necessary.\r\n *\r\n * Demos:\r\n *\r\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\r\n *\r\n * API:\r\n *\r\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\r\n */\nfunction CssTransition(props) {\n  var children = props.children,\n    className = props.className,\n    lastTransitionedPropertyOnEnter = props.lastTransitionedPropertyOnEnter,\n    lastTransitionedPropertyOnExit = props.lastTransitionedPropertyOnExit,\n    enterClassName = props.enterClassName,\n    exitClassName = props.exitClassName,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTransitionStateMa = useTransitionStateManager(),\n    requestedEnter = _useTransitionStateMa.requestedEnter,\n    onEntering = _useTransitionStateMa.onEntering,\n    onEntered = _useTransitionStateMa.onEntered,\n    onExiting = _useTransitionStateMa.onExiting,\n    onExited = _useTransitionStateMa.onExited;\n  var _React$useState = React.useState(!requestedEnter),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isEntering = _React$useState2[0],\n    setIsEntering = _React$useState2[1];\n\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n  React.useEffect(function () {\n    if (requestedEnter) {\n      requestAnimationFrame(function () {\n        setIsEntering(true);\n      });\n    } else {\n      requestAnimationFrame(function () {\n        setIsEntering(false);\n      });\n    }\n  });\n  React.useEffect(function () {\n    if (requestedEnter) {\n      onEntering();\n    } else {\n      onExiting();\n    }\n  }, [requestedEnter, onEntering, onExiting]);\n  var handleTransitionEnd = React.useCallback(function (event) {\n    if (requestedEnter) {\n      if (lastTransitionedPropertyOnEnter == null || event.propertyName === lastTransitionedPropertyOnEnter) {\n        onEntered();\n      }\n    } else if (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit) {\n      onExited();\n    }\n  }, [onExited, onEntered, requestedEnter, lastTransitionedPropertyOnEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName)\n  }, other, {\n    children: children\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };","map":{"version":3,"names":["_slicedToArray","_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssTransition","props","children","className","lastTransitionedPropertyOnEnter","lastTransitionedPropertyOnExit","enterClassName","exitClassName","other","_useTransitionStateMa","requestedEnter","onEntering","onEntered","onExiting","onExited","_React$useState","useState","_React$useState2","isEntering","setIsEntering","useEffect","requestAnimationFrame","handleTransitionEnd","useCallback","event","propertyName","onTransitionEnd","process","env","NODE_ENV","propTypes","node","string"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/base/Transitions/CssTransition.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"className\", \"lastTransitionedPropertyOnEnter\", \"lastTransitionedPropertyOnExit\", \"enterClassName\", \"exitClassName\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useTransitionStateManager } from '../useTransition';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n/**\r\n * A utility component that hooks up to the Base UI transitions API and\r\n * applies a CSS transition to its children when necessary.\r\n *\r\n * Demos:\r\n *\r\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\r\n *\r\n * API:\r\n *\r\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\r\n */\r\nfunction CssTransition(props) {\r\n  const {\r\n      children,\r\n      className,\r\n      lastTransitionedPropertyOnEnter,\r\n      lastTransitionedPropertyOnExit,\r\n      enterClassName,\r\n      exitClassName\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    requestedEnter,\r\n    onEntering,\r\n    onEntered,\r\n    onExiting,\r\n    onExited\r\n  } = useTransitionStateManager();\r\n  const [isEntering, setIsEntering] = React.useState(!requestedEnter);\r\n\r\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\r\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\r\n  // Thanks to this, elements that are mounted will have their enter transition applied\r\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\r\n  React.useEffect(() => {\r\n    if (requestedEnter) {\r\n      requestAnimationFrame(() => {\r\n        setIsEntering(true);\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        setIsEntering(false);\r\n      });\r\n    }\r\n  });\r\n  React.useEffect(() => {\r\n    if (requestedEnter) {\r\n      onEntering();\r\n    } else {\r\n      onExiting();\r\n    }\r\n  }, [requestedEnter, onEntering, onExiting]);\r\n  const handleTransitionEnd = React.useCallback(event => {\r\n    if (requestedEnter) {\r\n      if (lastTransitionedPropertyOnEnter == null || event.propertyName === lastTransitionedPropertyOnEnter) {\r\n        onEntered();\r\n      }\r\n    } else if (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit) {\r\n      onExited();\r\n    }\r\n  }, [onExited, onEntered, requestedEnter, lastTransitionedPropertyOnEnter, lastTransitionedPropertyOnExit]);\r\n  return /*#__PURE__*/_jsx(\"div\", _extends({\r\n    onTransitionEnd: handleTransitionEnd,\r\n    className: clsx(className, isEntering ? enterClassName : exitClassName)\r\n  }, other, {\r\n    children: children\r\n  }));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  enterClassName: PropTypes.string,\r\n  exitClassName: PropTypes.string,\r\n  lastTransitionedPropertyOnEnter: PropTypes.string,\r\n  lastTransitionedPropertyOnExit: PropTypes.string\r\n} : void 0;\r\nexport { CssTransition };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}