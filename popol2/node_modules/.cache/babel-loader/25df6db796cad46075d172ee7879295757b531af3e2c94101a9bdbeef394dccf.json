{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n    breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n    _options$disableAlign = options.disableAlign,\n    disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n    _options$factor = options.factor,\n    factor = _options$factor === void 0 ? 2 : _options$factor,\n    _options$variants = options.variants,\n    variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n  var theme = _extends({}, themeInput);\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography;\n\n  // Convert between CSS lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n    if (remFontSize <= 1) {\n      return;\n    }\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n    var transform = null;\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","map":{"version":3,"names":["_extends","_formatMuiErrorMessage","isUnitless","convertLength","responsiveProperty","alignProperty","fontGrid","responsiveFontSizes","themeInput","options","arguments","length","undefined","_options$breakpoints","breakpoints","_options$disableAlign","disableAlign","_options$factor","factor","_options$variants","variants","theme","typography","convert","htmlFontSize","breakpointValues","map","x","values","forEach","variant","style","remFontSize","parseFloat","fontSize","maxFontSize","minFontSize","lineHeight","Error","process","env","NODE_ENV","transform","value","size","grid","pixels","cssProperty","min","max","unit"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@mui/material/styles/responsiveFontSizes.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\r\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\r\nexport default function responsiveFontSizes(themeInput, options = {}) {\r\n  const {\r\n    breakpoints = ['sm', 'md', 'lg'],\r\n    disableAlign = false,\r\n    factor = 2,\r\n    variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline']\r\n  } = options;\r\n  const theme = _extends({}, themeInput);\r\n  theme.typography = _extends({}, theme.typography);\r\n  const typography = theme.typography;\r\n\r\n  // Convert between CSS lengths e.g. em->px or px->rem\r\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\r\n  const convert = convertLength(typography.htmlFontSize);\r\n  const breakpointValues = breakpoints.map(x => theme.breakpoints.values[x]);\r\n  variants.forEach(variant => {\r\n    const style = typography[variant];\r\n    const remFontSize = parseFloat(convert(style.fontSize, 'rem'));\r\n    if (remFontSize <= 1) {\r\n      return;\r\n    }\r\n    const maxFontSize = remFontSize;\r\n    const minFontSize = 1 + (maxFontSize - 1) / factor;\r\n    let {\r\n      lineHeight\r\n    } = style;\r\n    if (!isUnitless(lineHeight) && !disableAlign) {\r\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported non-unitless line height with grid alignment.\r\nUse unitless line heights instead.` : _formatMuiErrorMessage(6));\r\n    }\r\n    if (!isUnitless(lineHeight)) {\r\n      // make it unitless\r\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\r\n    }\r\n    let transform = null;\r\n    if (!disableAlign) {\r\n      transform = value => alignProperty({\r\n        size: value,\r\n        grid: fontGrid({\r\n          pixels: 4,\r\n          lineHeight,\r\n          htmlFontSize: typography.htmlFontSize\r\n        })\r\n      });\r\n    }\r\n    typography[variant] = _extends({}, style, responsiveProperty({\r\n      cssProperty: 'fontSize',\r\n      min: minFontSize,\r\n      max: maxFontSize,\r\n      unit: 'rem',\r\n      breakpoints: breakpointValues,\r\n      transform\r\n    }));\r\n  });\r\n  return theme;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}